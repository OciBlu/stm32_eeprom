ARM GAS  /tmp/ccgAGEtU.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_GPIO_Init,"ax",%progbits
  16              		.align	1
  17              		.arch armv7-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_GPIO_Init:
  24              	.LFB70:
  25              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include "string.h"
  25:Core/Src/main.c **** #include "stdio.h"
  26:Core/Src/main.c **** #include "ssd1306_fonts.h"
  27:Core/Src/main.c **** #include "ssd1306_tests.h"
  28:Core/Src/main.c **** #include "ssd1306.h"
  29:Core/Src/main.c **** #include "bitmap.h"
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** #include "stm32f1xx_hal_i2c.h"
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* USER CODE END Includes */
ARM GAS  /tmp/ccgAGEtU.s 			page 2


  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  36:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* USER CODE END PTD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PD */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE END PD */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  46:Core/Src/main.c **** /* USER CODE BEGIN PM */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* USER CODE END PM */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  51:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** UART_HandleTypeDef huart1;
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* USER CODE BEGIN PV */
  56:Core/Src/main.c **** #define EEPROM_ADDR (0xA0 << 1)
  57:Core/Src/main.c **** uint8_t Data_Save[] = "4096";
  58:Core/Src/main.c **** uint8_t Data_Read[64];
  59:Core/Src/main.c **** uint16_t Nilai_Data;
  60:Core/Src/main.c **** char data_memori[64];
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** uint8_t Buffer[25] = {0};
  63:Core/Src/main.c **** uint8_t Space[] = " - ";
  64:Core/Src/main.c **** uint8_t StartMSG[] = "Starting I2C Scanning: \r\n";
  65:Core/Src/main.c **** uint8_t EndMSG[] = "Done! \r\n\r\n";
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** /* USER CODE END PV */
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  70:Core/Src/main.c **** void SystemClock_Config(void);
  71:Core/Src/main.c **** static void MX_GPIO_Init(void);
  72:Core/Src/main.c **** static void MX_I2C1_Init(void);
  73:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
  74:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  75:Core/Src/main.c **** 
  76:Core/Src/main.c **** /* USER CODE END PFP */
  77:Core/Src/main.c **** 
  78:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  79:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c **** /* USER CODE END 0 */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c **** /**
  84:Core/Src/main.c ****   * @brief  The application entry point.
  85:Core/Src/main.c ****   * @retval int
  86:Core/Src/main.c ****   */
  87:Core/Src/main.c **** int main(void)
  88:Core/Src/main.c **** {
  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
ARM GAS  /tmp/ccgAGEtU.s 			page 3


  91:Core/Src/main.c ****   //uint8_t i = 0, ret;
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* USER CODE END 1 */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  98:Core/Src/main.c ****   HAL_Init();
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 101:Core/Src/main.c ****   HAL_Delay(100); // tambahkan delay untuk auto reset supaya bisa auto run
 102:Core/Src/main.c ****   /* USER CODE END Init */
 103:Core/Src/main.c **** 
 104:Core/Src/main.c ****   /* Configure the system clock */
 105:Core/Src/main.c ****   SystemClock_Config();
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****   /* USER CODE END SysInit */
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****   /* Initialize all configured peripherals */
 112:Core/Src/main.c ****   MX_GPIO_Init();
 113:Core/Src/main.c ****   MX_I2C1_Init();
 114:Core/Src/main.c ****   MX_USART1_UART_Init();
 115:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 116:Core/Src/main.c ****   HAL_Delay(1000);
 117:Core/Src/main.c ****   /*
 118:Core/Src/main.c ****     //-[ I2C Bus Scanning ]-
 119:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, StartMSG, sizeof(StartMSG), 10000);
 120:Core/Src/main.c ****     for(i=1; i<128; i++)
 121:Core/Src/main.c ****     {
 122:Core/Src/main.c ****         ret = HAL_I2C_IsDeviceReady(&hi2c1, (uint16_t)(i<<1), 3, 5);
 123:Core/Src/main.c ****         if (ret != HAL_OK) ///No ACK Received At That Address
 124:Core/Src/main.c ****         {
 125:Core/Src/main.c ****             HAL_UART_Transmit(&huart1, Space, sizeof(Space), 10000);
 126:Core/Src/main.c ****         }
 127:Core/Src/main.c ****         else if(ret == HAL_OK)
 128:Core/Src/main.c ****         {
 129:Core/Src/main.c ****             sprintf(Buffer, "0x%X", i);
 130:Core/Src/main.c ****             HAL_UART_Transmit(&huart1, Buffer, sizeof(Buffer), 10000);
 131:Core/Src/main.c ****         }
 132:Core/Src/main.c ****     }
 133:Core/Src/main.c ****     HAL_UART_Transmit(&huart1, EndMSG, sizeof(EndMSG), 10000);
 134:Core/Src/main.c ****     //--[ Scanning Done ]--
 135:Core/Src/main.c ****   */
 136:Core/Src/main.c **** 
 137:Core/Src/main.c ****   
 138:Core/Src/main.c ****   //HAL_I2C_Mem_Write(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t M
 139:Core/Src/main.c ****   HAL_I2C_Mem_Write(&hi2c1, 0x50<<1, 0x0000, 2, (uint8_t*)Data_Save, sizeof(Data_Save), HAL_MAX_DEL
 140:Core/Src/main.c ****   HAL_Delay(10);
 141:Core/Src/main.c ****   //HAL_I2C_Mem_Read(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t Me
 142:Core/Src/main.c ****   HAL_StatusTypeDef status = HAL_I2C_Mem_Read(&hi2c1, 0x50<<1, 0x0000, 2, (uint8_t*)Data_Read, size
 143:Core/Src/main.c ****   HAL_Delay(10);
 144:Core/Src/main.c ****   Nilai_Data = atoi(Data_Read);
 145:Core/Src/main.c **** 
 146:Core/Src/main.c ****   if (status == HAL_OK){
 147:Core/Src/main.c ****     sprintf(data_memori, "Berhasil baca EEPROM: %hu ", Nilai_Data);
ARM GAS  /tmp/ccgAGEtU.s 			page 4


 148:Core/Src/main.c ****     HAL_UART_Transmit(&huart1,(uint8_t*)data_memori, strlen(data_memori), HAL_MAX_DELAY);
 149:Core/Src/main.c ****     HAL_Delay(5);
 150:Core/Src/main.c ****   }
 151:Core/Src/main.c ****   else {
 152:Core/Src/main.c ****     sprintf(data_memori, "memori error! \r\n");
 153:Core/Src/main.c ****     HAL_UART_Transmit(&huart1,(uint8_t*)data_memori, strlen(data_memori), HAL_MAX_DELAY);
 154:Core/Src/main.c ****     HAL_Delay(5);
 155:Core/Src/main.c ****   }
 156:Core/Src/main.c ****   
 157:Core/Src/main.c ****  
 158:Core/Src/main.c **** 
 159:Core/Src/main.c ****   /* USER CODE END 2 */
 160:Core/Src/main.c **** 
 161:Core/Src/main.c ****   /* Infinite loop */
 162:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 163:Core/Src/main.c ****   while (1)
 164:Core/Src/main.c ****   {
 165:Core/Src/main.c ****     /* USER CODE END WHILE */
 166:Core/Src/main.c **** 
 167:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 168:Core/Src/main.c ****   }
 169:Core/Src/main.c ****   /* USER CODE END 3 */
 170:Core/Src/main.c **** }
 171:Core/Src/main.c **** 
 172:Core/Src/main.c **** /**
 173:Core/Src/main.c ****   * @brief System Clock Configuration
 174:Core/Src/main.c ****   * @retval None
 175:Core/Src/main.c ****   */
 176:Core/Src/main.c **** void SystemClock_Config(void)
 177:Core/Src/main.c **** {
 178:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 179:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 180:Core/Src/main.c **** 
 181:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 182:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 183:Core/Src/main.c ****   */
 184:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 185:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 186:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 187:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 188:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 189:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 190:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 191:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 192:Core/Src/main.c ****   {
 193:Core/Src/main.c ****     Error_Handler();
 194:Core/Src/main.c ****   }
 195:Core/Src/main.c **** 
 196:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 197:Core/Src/main.c ****   */
 198:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 199:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 200:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 201:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 202:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 203:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 204:Core/Src/main.c **** 
ARM GAS  /tmp/ccgAGEtU.s 			page 5


 205:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 206:Core/Src/main.c ****   {
 207:Core/Src/main.c ****     Error_Handler();
 208:Core/Src/main.c ****   }
 209:Core/Src/main.c **** }
 210:Core/Src/main.c **** 
 211:Core/Src/main.c **** /**
 212:Core/Src/main.c ****   * @brief I2C1 Initialization Function
 213:Core/Src/main.c ****   * @param None
 214:Core/Src/main.c ****   * @retval None
 215:Core/Src/main.c ****   */
 216:Core/Src/main.c **** static void MX_I2C1_Init(void)
 217:Core/Src/main.c **** {
 218:Core/Src/main.c **** 
 219:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
 220:Core/Src/main.c **** 
 221:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
 222:Core/Src/main.c **** 
 223:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
 224:Core/Src/main.c **** 
 225:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
 226:Core/Src/main.c ****   hi2c1.Instance = I2C1;
 227:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 400000;
 228:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 229:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 230:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 231:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 232:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 233:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 234:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 235:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 236:Core/Src/main.c ****   {
 237:Core/Src/main.c ****     Error_Handler();
 238:Core/Src/main.c ****   }
 239:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 240:Core/Src/main.c **** 
 241:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
 242:Core/Src/main.c **** 
 243:Core/Src/main.c **** }
 244:Core/Src/main.c **** 
 245:Core/Src/main.c **** /**
 246:Core/Src/main.c ****   * @brief USART1 Initialization Function
 247:Core/Src/main.c ****   * @param None
 248:Core/Src/main.c ****   * @retval None
 249:Core/Src/main.c ****   */
 250:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 251:Core/Src/main.c **** {
 252:Core/Src/main.c **** 
 253:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 254:Core/Src/main.c **** 
 255:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 256:Core/Src/main.c **** 
 257:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 258:Core/Src/main.c **** 
 259:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 260:Core/Src/main.c ****   huart1.Instance = USART1;
 261:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
ARM GAS  /tmp/ccgAGEtU.s 			page 6


 262:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 263:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 264:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 265:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 266:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 267:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 268:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 269:Core/Src/main.c ****   {
 270:Core/Src/main.c ****     Error_Handler();
 271:Core/Src/main.c ****   }
 272:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 273:Core/Src/main.c **** 
 274:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 275:Core/Src/main.c **** 
 276:Core/Src/main.c **** }
 277:Core/Src/main.c **** 
 278:Core/Src/main.c **** /**
 279:Core/Src/main.c ****   * @brief GPIO Initialization Function
 280:Core/Src/main.c ****   * @param None
 281:Core/Src/main.c ****   * @retval None
 282:Core/Src/main.c ****   */
 283:Core/Src/main.c **** static void MX_GPIO_Init(void)
 284:Core/Src/main.c **** {
  26              		.loc 1 284 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 16
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31 0000 84B0     		sub	sp, sp, #16
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 16
 285:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 286:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 287:Core/Src/main.c **** 
 288:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 289:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  34              		.loc 1 289 3 view .LVU1
  35              	.LBB4:
  36              		.loc 1 289 3 view .LVU2
  37              		.loc 1 289 3 view .LVU3
  38 0002 0F4B     		ldr	r3, .L3
  39 0004 9A69     		ldr	r2, [r3, #24]
  40 0006 42F02002 		orr	r2, r2, #32
  41 000a 9A61     		str	r2, [r3, #24]
  42              		.loc 1 289 3 view .LVU4
  43 000c 9A69     		ldr	r2, [r3, #24]
  44 000e 02F02002 		and	r2, r2, #32
  45 0012 0192     		str	r2, [sp, #4]
  46              		.loc 1 289 3 view .LVU5
  47 0014 019A     		ldr	r2, [sp, #4]
  48              	.LBE4:
  49              		.loc 1 289 3 view .LVU6
 290:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  50              		.loc 1 290 3 view .LVU7
  51              	.LBB5:
  52              		.loc 1 290 3 view .LVU8
  53              		.loc 1 290 3 view .LVU9
ARM GAS  /tmp/ccgAGEtU.s 			page 7


  54 0016 9A69     		ldr	r2, [r3, #24]
  55 0018 42F00402 		orr	r2, r2, #4
  56 001c 9A61     		str	r2, [r3, #24]
  57              		.loc 1 290 3 view .LVU10
  58 001e 9A69     		ldr	r2, [r3, #24]
  59 0020 02F00402 		and	r2, r2, #4
  60 0024 0292     		str	r2, [sp, #8]
  61              		.loc 1 290 3 view .LVU11
  62 0026 029A     		ldr	r2, [sp, #8]
  63              	.LBE5:
  64              		.loc 1 290 3 view .LVU12
 291:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  65              		.loc 1 291 3 view .LVU13
  66              	.LBB6:
  67              		.loc 1 291 3 view .LVU14
  68              		.loc 1 291 3 view .LVU15
  69 0028 9A69     		ldr	r2, [r3, #24]
  70 002a 42F00802 		orr	r2, r2, #8
  71 002e 9A61     		str	r2, [r3, #24]
  72              		.loc 1 291 3 view .LVU16
  73 0030 9B69     		ldr	r3, [r3, #24]
  74 0032 03F00803 		and	r3, r3, #8
  75 0036 0393     		str	r3, [sp, #12]
  76              		.loc 1 291 3 view .LVU17
  77 0038 039B     		ldr	r3, [sp, #12]
  78              	.LBE6:
  79              		.loc 1 291 3 view .LVU18
 292:Core/Src/main.c **** 
 293:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 294:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 295:Core/Src/main.c **** }
  80              		.loc 1 295 1 is_stmt 0 view .LVU19
  81 003a 04B0     		add	sp, sp, #16
  82              	.LCFI1:
  83              		.cfi_def_cfa_offset 0
  84              		@ sp needed
  85 003c 7047     		bx	lr
  86              	.L4:
  87 003e 00BF     		.align	2
  88              	.L3:
  89 0040 00100240 		.word	1073876992
  90              		.cfi_endproc
  91              	.LFE70:
  93              		.section	.text.Error_Handler,"ax",%progbits
  94              		.align	1
  95              		.global	Error_Handler
  96              		.syntax unified
  97              		.thumb
  98              		.thumb_func
  99              		.fpu softvfp
 101              	Error_Handler:
 102              	.LFB71:
 296:Core/Src/main.c **** 
 297:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 298:Core/Src/main.c **** 
 299:Core/Src/main.c **** /* USER CODE END 4 */
 300:Core/Src/main.c **** 
ARM GAS  /tmp/ccgAGEtU.s 			page 8


 301:Core/Src/main.c **** /**
 302:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 303:Core/Src/main.c ****   * @retval None
 304:Core/Src/main.c ****   */
 305:Core/Src/main.c **** void Error_Handler(void)
 306:Core/Src/main.c **** {
 103              		.loc 1 306 1 is_stmt 1 view -0
 104              		.cfi_startproc
 105              		@ Volatile: function does not return.
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108              		@ link register save eliminated.
 307:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 308:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 309:Core/Src/main.c ****   __disable_irq();
 109              		.loc 1 309 3 view .LVU21
 110              	.LBB7:
 111              	.LBI7:
 112              		.file 2 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****  * @version  V4.30
   5:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****  * @date     20. October 2015
   6:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** 
   9:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    All rights reserved.
  10:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    Redistribution and use in source and binary forms, with or without
  11:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    modification, are permitted provided that the following conditions are met:
  12:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    - Redistributions of source code must retain the above copyright
  13:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer.
  14:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    - Redistributions in binary form must reproduce the above copyright
  15:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer in the
  16:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****      documentation and/or other materials provided with the distribution.
  17:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****      to endorse or promote products derived from this software without
  19:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****      specific prior written permission.
  20:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    *
  21:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****    ---------------------------------------------------------------------------*/
  33:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** 
  35:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  36:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  37:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** 
  38:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
ARM GAS  /tmp/ccgAGEtU.s 			page 9


  39:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** #if defined ( __GNUC__ )
  40:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  41:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  42:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  43:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  44:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** #endif
  45:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** 
  46:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** 
  47:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  48:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  49:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  50:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****   @{
  51:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****  */
  52:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** 
  53:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** /**
  54:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  55:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  56:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  57:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****  */
  58:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
  59:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** {
  60:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  61:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** }
  62:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** 
  63:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** 
  64:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** /**
  65:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  66:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  67:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****   Can only be executed in Privileged modes.
  68:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****  */
  69:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
 113              		.loc 2 69 57 view .LVU22
 114              	.LBB8:
  70:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h **** {
  71:Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 115              		.loc 2 71 3 view .LVU23
 116              		.syntax unified
 117              	@ 71 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/cmsis_gcc.h" 1
 118 0000 72B6     		cpsid i
 119              	@ 0 "" 2
 120              		.thumb
 121              		.syntax unified
 122              	.L6:
 123              	.LBE8:
 124              	.LBE7:
 310:Core/Src/main.c ****   while (1)
 125              		.loc 1 310 3 discriminator 1 view .LVU24
 311:Core/Src/main.c ****   {
 312:Core/Src/main.c ****   }
 126              		.loc 1 312 3 discriminator 1 view .LVU25
 310:Core/Src/main.c ****   while (1)
 127              		.loc 1 310 9 discriminator 1 view .LVU26
 128 0002 FEE7     		b	.L6
 129              		.cfi_endproc
 130              	.LFE71:
 132              		.section	.text.MX_I2C1_Init,"ax",%progbits
 133              		.align	1
ARM GAS  /tmp/ccgAGEtU.s 			page 10


 134              		.syntax unified
 135              		.thumb
 136              		.thumb_func
 137              		.fpu softvfp
 139              	MX_I2C1_Init:
 140              	.LFB68:
 217:Core/Src/main.c **** 
 141              		.loc 1 217 1 view -0
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 0
 144              		@ frame_needed = 0, uses_anonymous_args = 0
 145 0000 08B5     		push	{r3, lr}
 146              	.LCFI2:
 147              		.cfi_def_cfa_offset 8
 148              		.cfi_offset 3, -8
 149              		.cfi_offset 14, -4
 226:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 400000;
 150              		.loc 1 226 3 view .LVU28
 226:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 400000;
 151              		.loc 1 226 18 is_stmt 0 view .LVU29
 152 0002 0A48     		ldr	r0, .L11
 153 0004 0A4B     		ldr	r3, .L11+4
 154 0006 0360     		str	r3, [r0]
 227:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 155              		.loc 1 227 3 is_stmt 1 view .LVU30
 227:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 156              		.loc 1 227 25 is_stmt 0 view .LVU31
 157 0008 0A4B     		ldr	r3, .L11+8
 158 000a 4360     		str	r3, [r0, #4]
 228:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 159              		.loc 1 228 3 is_stmt 1 view .LVU32
 228:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 160              		.loc 1 228 24 is_stmt 0 view .LVU33
 161 000c 0023     		movs	r3, #0
 162 000e 8360     		str	r3, [r0, #8]
 229:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 163              		.loc 1 229 3 is_stmt 1 view .LVU34
 229:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 164              		.loc 1 229 26 is_stmt 0 view .LVU35
 165 0010 C360     		str	r3, [r0, #12]
 230:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 166              		.loc 1 230 3 is_stmt 1 view .LVU36
 230:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 167              		.loc 1 230 29 is_stmt 0 view .LVU37
 168 0012 4FF48042 		mov	r2, #16384
 169 0016 0261     		str	r2, [r0, #16]
 231:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 170              		.loc 1 231 3 is_stmt 1 view .LVU38
 231:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 171              		.loc 1 231 30 is_stmt 0 view .LVU39
 172 0018 4361     		str	r3, [r0, #20]
 232:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 173              		.loc 1 232 3 is_stmt 1 view .LVU40
 232:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 174              		.loc 1 232 26 is_stmt 0 view .LVU41
 175 001a 8361     		str	r3, [r0, #24]
 233:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
ARM GAS  /tmp/ccgAGEtU.s 			page 11


 176              		.loc 1 233 3 is_stmt 1 view .LVU42
 233:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 177              		.loc 1 233 30 is_stmt 0 view .LVU43
 178 001c C361     		str	r3, [r0, #28]
 234:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 179              		.loc 1 234 3 is_stmt 1 view .LVU44
 234:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 180              		.loc 1 234 28 is_stmt 0 view .LVU45
 181 001e 0362     		str	r3, [r0, #32]
 235:Core/Src/main.c ****   {
 182              		.loc 1 235 3 is_stmt 1 view .LVU46
 235:Core/Src/main.c ****   {
 183              		.loc 1 235 7 is_stmt 0 view .LVU47
 184 0020 FFF7FEFF 		bl	HAL_I2C_Init
 185              	.LVL0:
 235:Core/Src/main.c ****   {
 186              		.loc 1 235 6 view .LVU48
 187 0024 00B9     		cbnz	r0, .L10
 243:Core/Src/main.c **** 
 188              		.loc 1 243 1 view .LVU49
 189 0026 08BD     		pop	{r3, pc}
 190              	.L10:
 237:Core/Src/main.c ****   }
 191              		.loc 1 237 5 is_stmt 1 view .LVU50
 192 0028 FFF7FEFF 		bl	Error_Handler
 193              	.LVL1:
 194              	.L12:
 195              		.align	2
 196              	.L11:
 197 002c 00000000 		.word	.LANCHOR0
 198 0030 00540040 		.word	1073763328
 199 0034 801A0600 		.word	400000
 200              		.cfi_endproc
 201              	.LFE68:
 203              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 204              		.align	1
 205              		.syntax unified
 206              		.thumb
 207              		.thumb_func
 208              		.fpu softvfp
 210              	MX_USART1_UART_Init:
 211              	.LFB69:
 251:Core/Src/main.c **** 
 212              		.loc 1 251 1 view -0
 213              		.cfi_startproc
 214              		@ args = 0, pretend = 0, frame = 0
 215              		@ frame_needed = 0, uses_anonymous_args = 0
 216 0000 08B5     		push	{r3, lr}
 217              	.LCFI3:
 218              		.cfi_def_cfa_offset 8
 219              		.cfi_offset 3, -8
 220              		.cfi_offset 14, -4
 260:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 221              		.loc 1 260 3 view .LVU52
 260:Core/Src/main.c ****   huart1.Init.BaudRate = 115200;
 222              		.loc 1 260 19 is_stmt 0 view .LVU53
 223 0002 0A48     		ldr	r0, .L17
ARM GAS  /tmp/ccgAGEtU.s 			page 12


 224 0004 0A4B     		ldr	r3, .L17+4
 225 0006 0360     		str	r3, [r0]
 261:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 226              		.loc 1 261 3 is_stmt 1 view .LVU54
 261:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 227              		.loc 1 261 24 is_stmt 0 view .LVU55
 228 0008 4FF4E133 		mov	r3, #115200
 229 000c 4360     		str	r3, [r0, #4]
 262:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 230              		.loc 1 262 3 is_stmt 1 view .LVU56
 262:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 231              		.loc 1 262 26 is_stmt 0 view .LVU57
 232 000e 0023     		movs	r3, #0
 233 0010 8360     		str	r3, [r0, #8]
 263:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 234              		.loc 1 263 3 is_stmt 1 view .LVU58
 263:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 235              		.loc 1 263 24 is_stmt 0 view .LVU59
 236 0012 C360     		str	r3, [r0, #12]
 264:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 237              		.loc 1 264 3 is_stmt 1 view .LVU60
 264:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 238              		.loc 1 264 22 is_stmt 0 view .LVU61
 239 0014 0361     		str	r3, [r0, #16]
 265:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 240              		.loc 1 265 3 is_stmt 1 view .LVU62
 265:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 241              		.loc 1 265 20 is_stmt 0 view .LVU63
 242 0016 0C22     		movs	r2, #12
 243 0018 4261     		str	r2, [r0, #20]
 266:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 244              		.loc 1 266 3 is_stmt 1 view .LVU64
 266:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 245              		.loc 1 266 25 is_stmt 0 view .LVU65
 246 001a 8361     		str	r3, [r0, #24]
 267:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 247              		.loc 1 267 3 is_stmt 1 view .LVU66
 267:Core/Src/main.c ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 248              		.loc 1 267 28 is_stmt 0 view .LVU67
 249 001c C361     		str	r3, [r0, #28]
 268:Core/Src/main.c ****   {
 250              		.loc 1 268 3 is_stmt 1 view .LVU68
 268:Core/Src/main.c ****   {
 251              		.loc 1 268 7 is_stmt 0 view .LVU69
 252 001e FFF7FEFF 		bl	HAL_UART_Init
 253              	.LVL2:
 268:Core/Src/main.c ****   {
 254              		.loc 1 268 6 view .LVU70
 255 0022 00B9     		cbnz	r0, .L16
 276:Core/Src/main.c **** 
 256              		.loc 1 276 1 view .LVU71
 257 0024 08BD     		pop	{r3, pc}
 258              	.L16:
 270:Core/Src/main.c ****   }
 259              		.loc 1 270 5 is_stmt 1 view .LVU72
 260 0026 FFF7FEFF 		bl	Error_Handler
 261              	.LVL3:
ARM GAS  /tmp/ccgAGEtU.s 			page 13


 262              	.L18:
 263 002a 00BF     		.align	2
 264              	.L17:
 265 002c 00000000 		.word	.LANCHOR1
 266 0030 00380140 		.word	1073821696
 267              		.cfi_endproc
 268              	.LFE69:
 270              		.section	.text.SystemClock_Config,"ax",%progbits
 271              		.align	1
 272              		.global	SystemClock_Config
 273              		.syntax unified
 274              		.thumb
 275              		.thumb_func
 276              		.fpu softvfp
 278              	SystemClock_Config:
 279              	.LFB67:
 177:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 280              		.loc 1 177 1 view -0
 281              		.cfi_startproc
 282              		@ args = 0, pretend = 0, frame = 64
 283              		@ frame_needed = 0, uses_anonymous_args = 0
 284 0000 00B5     		push	{lr}
 285              	.LCFI4:
 286              		.cfi_def_cfa_offset 4
 287              		.cfi_offset 14, -4
 288 0002 91B0     		sub	sp, sp, #68
 289              	.LCFI5:
 290              		.cfi_def_cfa_offset 72
 178:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 291              		.loc 1 178 3 view .LVU74
 178:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 292              		.loc 1 178 22 is_stmt 0 view .LVU75
 293 0004 2822     		movs	r2, #40
 294 0006 0021     		movs	r1, #0
 295 0008 06A8     		add	r0, sp, #24
 296 000a FFF7FEFF 		bl	memset
 297              	.LVL4:
 179:Core/Src/main.c **** 
 298              		.loc 1 179 3 is_stmt 1 view .LVU76
 179:Core/Src/main.c **** 
 299              		.loc 1 179 22 is_stmt 0 view .LVU77
 300 000e 0023     		movs	r3, #0
 301 0010 0193     		str	r3, [sp, #4]
 302 0012 0293     		str	r3, [sp, #8]
 303 0014 0393     		str	r3, [sp, #12]
 304 0016 0493     		str	r3, [sp, #16]
 305 0018 0593     		str	r3, [sp, #20]
 184:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 306              		.loc 1 184 3 is_stmt 1 view .LVU78
 184:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 307              		.loc 1 184 36 is_stmt 0 view .LVU79
 308 001a 0122     		movs	r2, #1
 309 001c 0692     		str	r2, [sp, #24]
 185:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 310              		.loc 1 185 3 is_stmt 1 view .LVU80
 185:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 311              		.loc 1 185 30 is_stmt 0 view .LVU81
ARM GAS  /tmp/ccgAGEtU.s 			page 14


 312 001e 4FF48033 		mov	r3, #65536
 313 0022 0793     		str	r3, [sp, #28]
 186:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 314              		.loc 1 186 3 is_stmt 1 view .LVU82
 187:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 315              		.loc 1 187 3 view .LVU83
 187:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 316              		.loc 1 187 30 is_stmt 0 view .LVU84
 317 0024 0A92     		str	r2, [sp, #40]
 188:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 318              		.loc 1 188 3 is_stmt 1 view .LVU85
 188:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 319              		.loc 1 188 34 is_stmt 0 view .LVU86
 320 0026 0222     		movs	r2, #2
 321 0028 0D92     		str	r2, [sp, #52]
 189:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 322              		.loc 1 189 3 is_stmt 1 view .LVU87
 189:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 323              		.loc 1 189 35 is_stmt 0 view .LVU88
 324 002a 0E93     		str	r3, [sp, #56]
 190:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 325              		.loc 1 190 3 is_stmt 1 view .LVU89
 190:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 326              		.loc 1 190 32 is_stmt 0 view .LVU90
 327 002c 4FF4E013 		mov	r3, #1835008
 328 0030 0F93     		str	r3, [sp, #60]
 191:Core/Src/main.c ****   {
 329              		.loc 1 191 3 is_stmt 1 view .LVU91
 191:Core/Src/main.c ****   {
 330              		.loc 1 191 7 is_stmt 0 view .LVU92
 331 0032 06A8     		add	r0, sp, #24
 332 0034 FFF7FEFF 		bl	HAL_RCC_OscConfig
 333              	.LVL5:
 191:Core/Src/main.c ****   {
 334              		.loc 1 191 6 view .LVU93
 335 0038 80B9     		cbnz	r0, .L23
 198:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 336              		.loc 1 198 3 is_stmt 1 view .LVU94
 198:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 337              		.loc 1 198 31 is_stmt 0 view .LVU95
 338 003a 0F23     		movs	r3, #15
 339 003c 0193     		str	r3, [sp, #4]
 200:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 340              		.loc 1 200 3 is_stmt 1 view .LVU96
 200:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 341              		.loc 1 200 34 is_stmt 0 view .LVU97
 342 003e 0221     		movs	r1, #2
 343 0040 0291     		str	r1, [sp, #8]
 201:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 344              		.loc 1 201 3 is_stmt 1 view .LVU98
 201:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 345              		.loc 1 201 35 is_stmt 0 view .LVU99
 346 0042 0023     		movs	r3, #0
 347 0044 0393     		str	r3, [sp, #12]
 202:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 348              		.loc 1 202 3 is_stmt 1 view .LVU100
 202:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
ARM GAS  /tmp/ccgAGEtU.s 			page 15


 349              		.loc 1 202 36 is_stmt 0 view .LVU101
 350 0046 4FF48062 		mov	r2, #1024
 351 004a 0492     		str	r2, [sp, #16]
 203:Core/Src/main.c **** 
 352              		.loc 1 203 3 is_stmt 1 view .LVU102
 203:Core/Src/main.c **** 
 353              		.loc 1 203 36 is_stmt 0 view .LVU103
 354 004c 0593     		str	r3, [sp, #20]
 205:Core/Src/main.c ****   {
 355              		.loc 1 205 3 is_stmt 1 view .LVU104
 205:Core/Src/main.c ****   {
 356              		.loc 1 205 7 is_stmt 0 view .LVU105
 357 004e 01A8     		add	r0, sp, #4
 358 0050 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 359              	.LVL6:
 205:Core/Src/main.c ****   {
 360              		.loc 1 205 6 view .LVU106
 361 0054 20B9     		cbnz	r0, .L24
 209:Core/Src/main.c **** 
 362              		.loc 1 209 1 view .LVU107
 363 0056 11B0     		add	sp, sp, #68
 364              	.LCFI6:
 365              		.cfi_remember_state
 366              		.cfi_def_cfa_offset 4
 367              		@ sp needed
 368 0058 5DF804FB 		ldr	pc, [sp], #4
 369              	.L23:
 370              	.LCFI7:
 371              		.cfi_restore_state
 193:Core/Src/main.c ****   }
 372              		.loc 1 193 5 is_stmt 1 view .LVU108
 373 005c FFF7FEFF 		bl	Error_Handler
 374              	.LVL7:
 375              	.L24:
 207:Core/Src/main.c ****   }
 376              		.loc 1 207 5 view .LVU109
 377 0060 FFF7FEFF 		bl	Error_Handler
 378              	.LVL8:
 379              		.cfi_endproc
 380              	.LFE67:
 382              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 383              		.align	2
 384              	.LC0:
 385 0000 42657268 		.ascii	"Berhasil baca EEPROM: %hu \000"
 385      6173696C 
 385      20626163 
 385      61204545 
 385      50524F4D 
 386 001b 00       		.align	2
 387              	.LC1:
 388 001c 6D656D6F 		.ascii	"memori error! \015\012\000"
 388      72692065 
 388      72726F72 
 388      21200D0A 
 388      00
 389              		.section	.text.main,"ax",%progbits
 390              		.align	1
ARM GAS  /tmp/ccgAGEtU.s 			page 16


 391              		.global	main
 392              		.syntax unified
 393              		.thumb
 394              		.thumb_func
 395              		.fpu softvfp
 397              	main:
 398              	.LFB66:
  88:Core/Src/main.c **** 
 399              		.loc 1 88 1 view -0
 400              		.cfi_startproc
 401              		@ args = 0, pretend = 0, frame = 0
 402              		@ frame_needed = 0, uses_anonymous_args = 0
 403 0000 30B5     		push	{r4, r5, lr}
 404              	.LCFI8:
 405              		.cfi_def_cfa_offset 12
 406              		.cfi_offset 4, -12
 407              		.cfi_offset 5, -8
 408              		.cfi_offset 14, -4
 409 0002 85B0     		sub	sp, sp, #20
 410              	.LCFI9:
 411              		.cfi_def_cfa_offset 32
  98:Core/Src/main.c **** 
 412              		.loc 1 98 3 view .LVU111
 413 0004 FFF7FEFF 		bl	HAL_Init
 414              	.LVL9:
 101:Core/Src/main.c ****   /* USER CODE END Init */
 415              		.loc 1 101 3 view .LVU112
 416 0008 6420     		movs	r0, #100
 417 000a FFF7FEFF 		bl	HAL_Delay
 418              	.LVL10:
 105:Core/Src/main.c **** 
 419              		.loc 1 105 3 view .LVU113
 420 000e FFF7FEFF 		bl	SystemClock_Config
 421              	.LVL11:
 112:Core/Src/main.c ****   MX_I2C1_Init();
 422              		.loc 1 112 3 view .LVU114
 423 0012 FFF7FEFF 		bl	MX_GPIO_Init
 424              	.LVL12:
 113:Core/Src/main.c ****   MX_USART1_UART_Init();
 425              		.loc 1 113 3 view .LVU115
 426 0016 FFF7FEFF 		bl	MX_I2C1_Init
 427              	.LVL13:
 114:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 428              		.loc 1 114 3 view .LVU116
 429 001a FFF7FEFF 		bl	MX_USART1_UART_Init
 430              	.LVL14:
 116:Core/Src/main.c ****   /*
 431              		.loc 1 116 3 view .LVU117
 432 001e 4FF47A70 		mov	r0, #1000
 433 0022 FFF7FEFF 		bl	HAL_Delay
 434              	.LVL15:
 139:Core/Src/main.c ****   HAL_Delay(10);
 435              		.loc 1 139 3 view .LVU118
 436 0026 284C     		ldr	r4, .L29
 437 0028 4FF0FF35 		mov	r5, #-1
 438 002c 0295     		str	r5, [sp, #8]
 439 002e 0523     		movs	r3, #5
ARM GAS  /tmp/ccgAGEtU.s 			page 17


 440 0030 0193     		str	r3, [sp, #4]
 441 0032 264B     		ldr	r3, .L29+4
 442 0034 0093     		str	r3, [sp]
 443 0036 0223     		movs	r3, #2
 444 0038 0022     		movs	r2, #0
 445 003a A021     		movs	r1, #160
 446 003c 2046     		mov	r0, r4
 447 003e FFF7FEFF 		bl	HAL_I2C_Mem_Write
 448              	.LVL16:
 140:Core/Src/main.c ****   //HAL_I2C_Mem_Read(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress, uint16_t Me
 449              		.loc 1 140 3 view .LVU119
 450 0042 0A20     		movs	r0, #10
 451 0044 FFF7FEFF 		bl	HAL_Delay
 452              	.LVL17:
 142:Core/Src/main.c ****   HAL_Delay(10);
 453              		.loc 1 142 3 view .LVU120
 142:Core/Src/main.c ****   HAL_Delay(10);
 454              		.loc 1 142 30 is_stmt 0 view .LVU121
 455 0048 0295     		str	r5, [sp, #8]
 456 004a 4023     		movs	r3, #64
 457 004c 0193     		str	r3, [sp, #4]
 458 004e 204D     		ldr	r5, .L29+8
 459 0050 0095     		str	r5, [sp]
 460 0052 0223     		movs	r3, #2
 461 0054 0022     		movs	r2, #0
 462 0056 A021     		movs	r1, #160
 463 0058 2046     		mov	r0, r4
 464 005a FFF7FEFF 		bl	HAL_I2C_Mem_Read
 465              	.LVL18:
 466 005e 0446     		mov	r4, r0
 467              	.LVL19:
 143:Core/Src/main.c ****   Nilai_Data = atoi(Data_Read);
 468              		.loc 1 143 3 is_stmt 1 view .LVU122
 469 0060 0A20     		movs	r0, #10
 470 0062 FFF7FEFF 		bl	HAL_Delay
 471              	.LVL20:
 144:Core/Src/main.c **** 
 472              		.loc 1 144 3 view .LVU123
 144:Core/Src/main.c **** 
 473              		.loc 1 144 16 is_stmt 0 view .LVU124
 474 0066 2846     		mov	r0, r5
 475 0068 FFF7FEFF 		bl	atoi
 476              	.LVL21:
 144:Core/Src/main.c **** 
 477              		.loc 1 144 14 view .LVU125
 478 006c 82B2     		uxth	r2, r0
 479 006e 194B     		ldr	r3, .L29+12
 480 0070 1A80     		strh	r2, [r3]	@ movhi
 146:Core/Src/main.c ****     sprintf(data_memori, "Berhasil baca EEPROM: %hu ", Nilai_Data);
 481              		.loc 1 146 3 is_stmt 1 view .LVU126
 146:Core/Src/main.c ****     sprintf(data_memori, "Berhasil baca EEPROM: %hu ", Nilai_Data);
 482              		.loc 1 146 6 is_stmt 0 view .LVU127
 483 0072 94B9     		cbnz	r4, .L26
 147:Core/Src/main.c ****     HAL_UART_Transmit(&huart1,(uint8_t*)data_memori, strlen(data_memori), HAL_MAX_DELAY);
 484              		.loc 1 147 5 is_stmt 1 view .LVU128
 485 0074 184C     		ldr	r4, .L29+16
 486              	.LVL22:
ARM GAS  /tmp/ccgAGEtU.s 			page 18


 147:Core/Src/main.c ****     HAL_UART_Transmit(&huart1,(uint8_t*)data_memori, strlen(data_memori), HAL_MAX_DELAY);
 487              		.loc 1 147 5 is_stmt 0 view .LVU129
 488 0076 1949     		ldr	r1, .L29+20
 489 0078 2046     		mov	r0, r4
 490 007a FFF7FEFF 		bl	sprintf
 491              	.LVL23:
 148:Core/Src/main.c ****     HAL_Delay(5);
 492              		.loc 1 148 5 is_stmt 1 view .LVU130
 148:Core/Src/main.c ****     HAL_Delay(5);
 493              		.loc 1 148 54 is_stmt 0 view .LVU131
 494 007e 2046     		mov	r0, r4
 495 0080 FFF7FEFF 		bl	strlen
 496              	.LVL24:
 148:Core/Src/main.c ****     HAL_Delay(5);
 497              		.loc 1 148 5 view .LVU132
 498 0084 4FF0FF33 		mov	r3, #-1
 499 0088 82B2     		uxth	r2, r0
 500 008a 2146     		mov	r1, r4
 501 008c 1448     		ldr	r0, .L29+24
 502 008e FFF7FEFF 		bl	HAL_UART_Transmit
 503              	.LVL25:
 149:Core/Src/main.c ****   }
 504              		.loc 1 149 5 is_stmt 1 view .LVU133
 505 0092 0520     		movs	r0, #5
 506 0094 FFF7FEFF 		bl	HAL_Delay
 507              	.LVL26:
 508              	.L27:
 163:Core/Src/main.c ****   {
 509              		.loc 1 163 3 discriminator 1 view .LVU134
 168:Core/Src/main.c ****   /* USER CODE END 3 */
 510              		.loc 1 168 3 discriminator 1 view .LVU135
 163:Core/Src/main.c ****   {
 511              		.loc 1 163 9 discriminator 1 view .LVU136
 512 0098 FEE7     		b	.L27
 513              	.LVL27:
 514              	.L26:
 152:Core/Src/main.c ****     HAL_UART_Transmit(&huart1,(uint8_t*)data_memori, strlen(data_memori), HAL_MAX_DELAY);
 515              		.loc 1 152 5 view .LVU137
 516 009a 0F4C     		ldr	r4, .L29+16
 517              	.LVL28:
 152:Core/Src/main.c ****     HAL_UART_Transmit(&huart1,(uint8_t*)data_memori, strlen(data_memori), HAL_MAX_DELAY);
 518              		.loc 1 152 5 is_stmt 0 view .LVU138
 519 009c A446     		mov	ip, r4
 520 009e 114D     		ldr	r5, .L29+28
 521 00a0 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 522 00a2 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 523 00a6 2B68     		ldr	r3, [r5]
 524 00a8 8CF80030 		strb	r3, [ip]
 153:Core/Src/main.c ****     HAL_Delay(5);
 525              		.loc 1 153 5 is_stmt 1 view .LVU139
 153:Core/Src/main.c ****     HAL_Delay(5);
 526              		.loc 1 153 54 is_stmt 0 view .LVU140
 527 00ac 2046     		mov	r0, r4
 528 00ae FFF7FEFF 		bl	strlen
 529              	.LVL29:
 153:Core/Src/main.c ****     HAL_Delay(5);
 530              		.loc 1 153 5 view .LVU141
ARM GAS  /tmp/ccgAGEtU.s 			page 19


 531 00b2 4FF0FF33 		mov	r3, #-1
 532 00b6 82B2     		uxth	r2, r0
 533 00b8 2146     		mov	r1, r4
 534 00ba 0948     		ldr	r0, .L29+24
 535 00bc FFF7FEFF 		bl	HAL_UART_Transmit
 536              	.LVL30:
 154:Core/Src/main.c ****   }
 537              		.loc 1 154 5 is_stmt 1 view .LVU142
 538 00c0 0520     		movs	r0, #5
 539 00c2 FFF7FEFF 		bl	HAL_Delay
 540              	.LVL31:
 541 00c6 E7E7     		b	.L27
 542              	.L30:
 543              		.align	2
 544              	.L29:
 545 00c8 00000000 		.word	.LANCHOR0
 546 00cc 00000000 		.word	.LANCHOR2
 547 00d0 00000000 		.word	.LANCHOR3
 548 00d4 00000000 		.word	.LANCHOR4
 549 00d8 00000000 		.word	.LANCHOR5
 550 00dc 00000000 		.word	.LC0
 551 00e0 00000000 		.word	.LANCHOR1
 552 00e4 1C000000 		.word	.LC1
 553              		.cfi_endproc
 554              	.LFE66:
 556              		.global	EndMSG
 557              		.global	StartMSG
 558              		.global	Space
 559              		.global	Buffer
 560              		.global	data_memori
 561              		.global	Nilai_Data
 562              		.global	Data_Read
 563              		.global	Data_Save
 564              		.global	huart1
 565              		.global	hi2c1
 566              		.global	mata_merem
 567              		.global	mata_melek
 568              		.section	.bss.Buffer,"aw",%nobits
 569              		.align	2
 572              	Buffer:
 573 0000 00000000 		.space	25
 573      00000000 
 573      00000000 
 573      00000000 
 573      00000000 
 574              		.section	.bss.Data_Read,"aw",%nobits
 575              		.align	2
 576              		.set	.LANCHOR3,. + 0
 579              	Data_Read:
 580 0000 00000000 		.space	64
 580      00000000 
 580      00000000 
 580      00000000 
 580      00000000 
 581              		.section	.bss.Nilai_Data,"aw",%nobits
 582              		.align	1
 583              		.set	.LANCHOR4,. + 0
ARM GAS  /tmp/ccgAGEtU.s 			page 20


 586              	Nilai_Data:
 587 0000 0000     		.space	2
 588              		.section	.bss.data_memori,"aw",%nobits
 589              		.align	2
 590              		.set	.LANCHOR5,. + 0
 593              	data_memori:
 594 0000 00000000 		.space	64
 594      00000000 
 594      00000000 
 594      00000000 
 594      00000000 
 595              		.section	.bss.hi2c1,"aw",%nobits
 596              		.align	2
 597              		.set	.LANCHOR0,. + 0
 600              	hi2c1:
 601 0000 00000000 		.space	84
 601      00000000 
 601      00000000 
 601      00000000 
 601      00000000 
 602              		.section	.bss.huart1,"aw",%nobits
 603              		.align	2
 604              		.set	.LANCHOR1,. + 0
 607              	huart1:
 608 0000 00000000 		.space	72
 608      00000000 
 608      00000000 
 608      00000000 
 608      00000000 
 609              		.section	.data.Data_Save,"aw"
 610              		.align	2
 611              		.set	.LANCHOR2,. + 0
 614              	Data_Save:
 615 0000 34303936 		.ascii	"4096\000"
 615      00
 616              		.section	.data.EndMSG,"aw"
 617              		.align	2
 620              	EndMSG:
 621 0000 446F6E65 		.ascii	"Done! \015\012\015\012\000"
 621      21200D0A 
 621      0D0A00
 622              		.section	.data.Space,"aw"
 623              		.align	2
 626              	Space:
 627 0000 202D2000 		.ascii	" - \000"
 628              		.section	.data.StartMSG,"aw"
 629              		.align	2
 632              	StartMSG:
 633 0000 53746172 		.ascii	"Starting I2C Scanning: \015\012\000"
 633      74696E67 
 633      20493243 
 633      20536361 
 633      6E6E696E 
 634              		.section	.rodata.mata_melek,"a"
 635              		.align	2
 638              	mata_melek:
 639 0000 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
ARM GAS  /tmp/ccgAGEtU.s 			page 21


 639      00000000 
 639      00000000 
 639      00
 640 000d 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 640      00000000 
 640      00000000 
 640      00
 641 001a 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 641      00000000 
 641      00000000 
 641      00
 642 0027 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 642      00000000 
 642      00000000 
 642      00
 643 0034 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 643      00000000 
 643      00000000 
 643      00
 644 0041 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 644      00000000 
 644      00000000 
 644      00
 645 004e 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 645      00000000 
 645      00000000 
 645      00
 646 005b 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 646      00000000 
 646      00000000 
 646      00
 647 0068 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 647      00000000 
 647      00000000 
 647      00
 648 0075 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 648      00000000 
 648      00000000 
 648      00
 649 0082 00000001 		.ascii	"\000\000\000\001\370\000\001\360\000\000\000\000\000"
 649      F80001F0 
 649      00000000 
 649      00
 650 008f 00000000 		.ascii	"\000\000\000\000\000\000\017\360\000\017\370\000\000"
 650      00000FF0 
 650      000FF800 
 650      00
 651 009c 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000?\360\000\037\370"
 651      00000000 
 651      003FF000 
 651      1FF8
 652 00aa 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\001\377\360"
 652      00000000 
 652      000001FF 
 652      F0
 653 00b7 003FFC00 		.ascii	"\000?\374\000\000\000\000\000\000\000\000\000\000\007"
 653      00000000 
ARM GAS  /tmp/ccgAGEtU.s 			page 22


 653      00000000 
 653      0007
 654 00c5 FFF0007F 		.ascii	"\377\360\000\177\374\000\000\000\000\000\000\000\000"
 654      FC000000 
 654      00000000 
 654      00
 655 00d2 00003FFF 		.ascii	"\000\000?\377\340\000\377\374\000\000\000\000\000\000"
 655      E000FFFC 
 655      00000000 
 655      0000
 656 00e0 00000003 		.ascii	"\000\000\000\003\377\377\340\000\377\376\002\000\000"
 656      FFFFE000 
 656      FFFE0200 
 656      00
 657 00ed 00000000 		.ascii	"\000\000\000\000\000\000\007\377\377\340\000\377\376"
 657      000007FF 
 657      FFE000FF 
 657      FE
 658 00fa 03000000 		.ascii	"\003\000\000\000\000\000\000\000\000\007\377\377\340"
 658      00000000 
 658      0007FFFF 
 658      E0
 659 0107 00FFFE03 		.ascii	"\000\377\376\003\200\000\000\000\000\000\000\000\003"
 659      80000000 
 659      00000000 
 659      03
 660 0114 FFFFC000 		.ascii	"\377\377\300\000\377\376\003\300\000\000\000\000\000"
 660      FFFE03C0 
 660      00000000 
 660      00
 661 0121 000001FF 		.ascii	"\000\000\001\377\377\300\000\377\376\001\340\000\000"
 661      FFC000FF 
 661      FE01E000 
 661      00
 662 012e 00000000 		.ascii	"\000\000\000\000\000\000\377\377\300\000\377\376\001"
 662      0000FFFF 
 662      C000FFFE 
 662      01
 663 013b E0000000 		.ascii	"\340\000\000\000\000\000\000\000\000\177\377\300\000"
 663      00000000 
 663      007FFFC0 
 663      00
 664 0148 FFFE01F0 		.ascii	"\377\376\001\360\000\000\000\000\000\000\000\000\177"
 664      00000000 
 664      00000000 
 664      7F
 665 0155 FFC0007F 		.ascii	"\377\300\000\177\376\001\370\000\000\000\000\000\000"
 665      FE01F800 
 665      00000000 
 665      00
 666 0162 00003FFF 		.ascii	"\000\000?\377\300\000\177\376\000\370\000\000\000\000"
 666      C0007FFE 
 666      00F80000 
 666      0000
 667 0170 00000000 		.ascii	"\000\000\000\000\037\377\300\000?\376\000\374\000\000"
 667      1FFFC000 
 667      3FFE00FC 
ARM GAS  /tmp/ccgAGEtU.s 			page 23


 667      0000
 668 017e 00000000 		.ascii	"\000\000\000\000\000\000\007\377\300\000?\374\000\376"
 668      000007FF 
 668      C0003FFC 
 668      00FE
 669 018c 00000000 		.ascii	"\000\000\000\000\000\000\000\000\003\377\300\000\037"
 669      00000000 
 669      03FFC000 
 669      1F
 670 0199 F800FE00 		.ascii	"\370\000\376\000\000\000\000\000\000\000\000\000\377"
 670      00000000 
 670      00000000 
 670      FF
 671 01a6 C0000FF0 		.ascii	"\300\000\017\360\000\376\000\000\000\000\000\000\000"
 671      00FE0000 
 671      00000000 
 671      00
 672 01b3 00007FC0 		.ascii	"\000\000\177\300\000\000\000\000\377\000\000\000\000"
 672      00000000 
 672      FF000000 
 672      00
 673 01c0 00000000 		.ascii	"\000\000\000\000\000?\300\000\000\000\000\377\000\000"
 673      003FC000 
 673      000000FF 
 673      0000
 674 01ce 00000000 		.ascii	"\000\000\000\000\000\000\000\037\300\000\000\000\000"
 674      0000001F 
 674      C0000000 
 674      00
 675 01db FF000000 		.ascii	"\377\000\000\000\000\000\000\000\000\000\017\300\000"
 675      00000000 
 675      00000FC0 
 675      00
 676 01e8 000000FF 		.ascii	"\000\000\000\377\000\000\000\000\000\000\000\000\000"
 676      00000000 
 676      00000000 
 676      00
 677 01f5 07E00000 		.ascii	"\007\340\000\000\000\000\377\000\000\000\000\000\000"
 677      0000FF00 
 677      00000000 
 677      00
 678 0202 00000003 		.ascii	"\000\000\000\003\340\000\000\000\000\377\000\000\000"
 678      E0000000 
 678      00FF0000 
 678      00
 679 020f 00000000 		.ascii	"\000\000\000\000\000\000\003\340\000\000\000\000\377"
 679      000003E0 
 679      00000000 
 679      FF
 680 021c 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\001\360\000\000"
 680      00000000 
 680      0001F000 
 680      00
 681 0229 0001FF00 		.ascii	"\000\001\377\000\000\000\000\000\000\000\000\000\000"
 681      00000000 
 681      00000000 
 681      00
ARM GAS  /tmp/ccgAGEtU.s 			page 24


 682 0236 F0000000 		.ascii	"\360\000\000\000\001\377\000\000\000\000\000\000\000"
 682      01FF0000 
 682      00000000 
 682      00
 683 0243 000000F8 		.ascii	"\000\000\000\370\000\000\000\001\377\000\000\000\000"
 683      00000001 
 683      FF000000 
 683      00
 684 0250 00000000 		.ascii	"\000\000\000\000\000\000|\000\000\000\003\377\000\000"
 684      00007C00 
 684      000003FF 
 684      0000
 685 025e 00000000 		.ascii	"\000\000\000\000\000\000\000\000>\000\000\000\003\377"
 685      00000000 
 685      3E000000 
 685      03FF
 686 026c 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\037\000\000"
 686      00000000 
 686      00001F00 
 686      00
 687 0279 0007FF00 		.ascii	"\000\007\377\000\000\000\000\000\000\000\000\000\000"
 687      00000000 
 687      00000000 
 687      00
 688 0286 1FC00000 		.ascii	"\037\300\000\000\017\377\200\000\000\000\000\000\000"
 688      0FFF8000 
 688      00000000 
 688      00
 689 0293 0000000F 		.ascii	"\000\000\000\017\360\000\000\037\377\200\000\000\000"
 689      F000001F 
 689      FF800000 
 689      00
 690 02a0 00000000 		.ascii	"\000\000\000\000\000\000\007\377\200\000\377\377\200"
 690      000007FF 
 690      8000FFFF 
 690      80
 691 02ad 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\003\377\376\037"
 691      00000000 
 691      0003FFFE 
 691      1F
 692 02ba FFFF8000 		.ascii	"\377\377\200\000\000\000\000\000\000\000\000\000\001"
 692      00000000 
 692      00000000 
 692      01
 693 02c7 FFFFFFFF 		.ascii	"\377\377\377\377\377\200\000\000\000\000\000\000\000"
 693      FF800000 
 693      00000000 
 693      00
 694 02d4 000000FF 		.ascii	"\000\000\000\377\377\377\377\377\200\000\000\000\000"
 694      FFFFFFFF 
 694      80000000 
 694      00
 695 02e1 00000000 		.ascii	"\000\000\000\000\000\000\177\377\377\377\377\200\000"
 695      00007FFF 
 695      FFFFFF80 
 695      00
 696 02ee 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000?\377\377\377\377"
ARM GAS  /tmp/ccgAGEtU.s 			page 25


 696      00000000 
 696      003FFFFF 
 696      FFFF
 697 02fc 80000000 		.ascii	"\200\000\000\000\000\000\000\000\000\000\000\017\377"
 697      00000000 
 697      0000000F 
 697      FF
 698 0309 FFFFFF80 		.ascii	"\377\377\377\200\000\000\000\000\000\000\000\000\000"
 698      00000000 
 698      00000000 
 698      00
 699 0316 0007FFFF 		.ascii	"\000\007\377\377\377\377\200\000\000\000\000\000\000"
 699      FFFF8000 
 699      00000000 
 699      00
 700 0323 00000000 		.ascii	"\000\000\000\000\001\377\377\377\377\200\000\000\000"
 700      01FFFFFF 
 700      FF800000 
 700      00
 701 0330 00000000 		.ascii	"\000\000\000\000\000\000\000\000\177\377\377\377\000"
 701      00000000 
 701      7FFFFFFF 
 701      00
 702 033d 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\037\377"
 702      00000000 
 702      0000001F 
 702      FF
 703 034a FFFF0000 		.ascii	"\377\377\000\000\000\000\000\000\000\000\000\000\000"
 703      00000000 
 703      00000000 
 703      00
 704 0357 0003FFFF 		.ascii	"\000\003\377\377\377\000\000\000\000\000\000\000\000"
 704      FF000000 
 704      00000000 
 704      00
 705 0364 00000000 		.ascii	"\000\000\000\000\000\000\003\377\000\000\000\000\000"
 705      000003FF 
 705      00000000 
 705      00
 706 0371 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000?\000\000\000"
 706      00000000 
 706      00003F00 
 706      0000
 707 037f 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\002"
 707      00000000 
 707      00000000 
 707      02
 708 038c 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 708      00000000 
 708      00000000 
 708      00
 709 0399 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 709      00000000 
 709      00000000 
 709      00
 710 03a6 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 710      00000000 
ARM GAS  /tmp/ccgAGEtU.s 			page 26


 710      00000000 
 710      00
 711 03b3 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 711      00000000 
 711      00000000 
 711      00
 712 03c0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 712      00000000 
 712      00000000 
 712      00
 713 03cd 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 713      00000000 
 713      00000000 
 713      00
 714 03da 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 714      00000000 
 714      00000000 
 714      00
 715 03e7 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 715      00000000 
 715      00000000 
 715      00
 716 03f4 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000"
 716      00000000 
 716      00000000 
 717              		.section	.rodata.mata_merem,"a"
 718              		.align	2
 721              	mata_merem:
 722 0000 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 722      00000000 
 722      00000000 
 722      00
 723 000d 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 723      00000000 
 723      00000000 
 723      00
 724 001a 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 724      00000000 
 724      00000000 
 724      00
 725 0027 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 725      00000000 
 725      00000000 
 725      00
 726 0034 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 726      00000000 
 726      00000000 
 726      00
 727 0041 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 727      00000000 
 727      00000000 
 727      00
 728 004e 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 728      00000000 
 728      00000000 
 728      00
 729 005b 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
ARM GAS  /tmp/ccgAGEtU.s 			page 27


 729      00000000 
 729      00000000 
 729      00
 730 0068 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\020\000"
 730      00000000 
 730      00000010 
 730      00
 731 0075 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 731      00000000 
 731      00000000 
 731      00
 732 0082 00180000 		.ascii	"\000\030\000\000\000\000\000\000\000\000\000\000\000"
 732      00000000 
 732      00000000 
 732      00
 733 008f 00000000 		.ascii	"\000\000\000\000\034\000\000\000\000\002\000\000\000"
 733      1C000000 
 733      00020000 
 733      00
 734 009c 00000000 		.ascii	"\000\000\000\000\000\000\000\036\000\000\000\000\003"
 734      0000001E 
 734      00000000 
 734      03
 735 00a9 80000000 		.ascii	"\200\000\000\000\000\000\000\000\000\000>\000\000\000"
 735      00000000 
 735      00003E00 
 735      0000
 736 00b7 0007C000 		.ascii	"\000\007\300\000\000\000\000\000\000\000\000\000<\000"
 736      00000000 
 736      00000000 
 736      3C00
 737 00c5 00000007 		.ascii	"\000\000\000\007\360\000\000\000\000\000\000\000\000"
 737      F0000000 
 737      00000000 
 737      00
 738 00d2 003C0000 		.ascii	"\000<\000\000\000\000\001\374\000\000\000\000\000\000"
 738      000001FC 
 738      00000000 
 738      0000
 739 00e0 0000003E 		.ascii	"\000\000\000>\000\000\000\000\000\376\000\000\000\000"
 739      00000000 
 739      00FE0000 
 739      0000
 740 00ee 00000000 		.ascii	"\000\000\000\000\000\177\200\000\000\000\000?\200\000"
 740      007F8000 
 740      0000003F 
 740      8000
 741 00fc 00000000 		.ascii	"\000\000\000\000\000\000\000\177\340\000\000\000\000"
 741      0000007F 
 741      E0000000 
 741      00
 742 0109 0FE00000 		.ascii	"\017\340\000\000\000\000\000\000\000\000{\360\000\000"
 742      00000000 
 742      00007BF0 
 742      0000
 743 0117 000007F0 		.ascii	"\000\000\007\360\000\000\000\000\000\000\000\000x\374"
 743      00000000 
ARM GAS  /tmp/ccgAGEtU.s 			page 28


 743      00000000 
 743      78FC
 744 0125 00000000 		.ascii	"\000\000\000\000\001\360\000\000\000\000\000\000\000"
 744      01F00000 
 744      00000000 
 744      00
 745 0132 00787F00 		.ascii	"\000x\177\000\000\000\000\000p\000\000\000\000\000\000"
 745      00000000 
 745      70000000 
 745      000000
 746 0141 0000301F 		.ascii	"\000\0000\037\200\000\000\000\000 \000\000\000\000\000"
 746      80000000 
 746      00200000 
 746      000000
 747 0150 00000010 		.ascii	"\000\000\000\020\007\340\000\000\000\000\000\000\000"
 747      07E00000 
 747      00000000 
 747      00
 748 015d 00000000 		.ascii	"\000\000\000\000\000\000\000\003\370\000\000\000\000"
 748      00000003 
 748      F8000000 
 748      00
 749 016a 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\376\000"
 749      00000000 
 749      000000FE 
 749      00
 750 0177 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 750      00000000 
 750      00000000 
 750      00
 751 0184 003F0000 		.ascii	"\000?\000\000\000\000\000\000\000\000\000\000\000\000"
 751      00000000 
 751      00000000 
 751      0000
 752 0192 0000000F 		.ascii	"\000\000\000\017\300\000\000\000\000\000\000\000\000"
 752      C0000000 
 752      00000000 
 752      00
 753 019f 00000000 		.ascii	"\000\000\000\000\000\000\007\360\000\000\000\000\000"
 753      000007F0 
 753      00000000 
 753      00
 754 01ac 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\001\370\000\000"
 754      00000000 
 754      0001F800 
 754      00
 755 01b9 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 755      00000000 
 755      00000000 
 755      00
 756 01c6 7E000000 		.ascii	"~\000\000\000\000\000\000\000\000\000\000\000\000\000"
 756      00000000 
 756      00000000 
 756      0000
 757 01d4 00003F80 		.ascii	"\000\000?\200\000\000\000\000\000\000\000\000\000\000"
 757      00000000 
 757      00000000 
ARM GAS  /tmp/ccgAGEtU.s 			page 29


 757      0000
 758 01e2 00000000 		.ascii	"\000\000\000\000\017\340\000\000\000\000\000\000\000"
 758      0FE00000 
 758      00000000 
 758      00
 759 01ef 00000000 		.ascii	"\000\000\000\000\000\000\000\003\360\000\000\000\000"
 759      00000003 
 759      F0000000 
 759      00
 760 01fc 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\001\374\000"
 760      00000000 
 760      000001FC 
 760      00
 761 0209 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 761      00000000 
 761      00000000 
 761      00
 762 0216 007F0000 		.ascii	"\000\177\000\000\000\000\000\000\000\000\000\000\000"
 762      00000000 
 762      00000000 
 762      00
 763 0223 00000000 		.ascii	"\000\000\000\000\037\200\000\000\000\000\000\000\000"
 763      1F800000 
 763      00000000 
 763      00
 764 0230 00000000 		.ascii	"\000\000\000\000\000\000\000\007\340\000\000\000\000"
 764      00000007 
 764      E0000000 
 764      00
 765 023d 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\003\370\000"
 765      00000000 
 765      000003F8 
 765      00
 766 024a 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 766      00000000 
 766      00000000 
 766      00
 767 0257 00FE0000 		.ascii	"\000\376\000\000\000\000\000\000\000\000\000\000\000"
 767      00000000 
 767      00000000 
 767      00
 768 0264 00000000 		.ascii	"\000\000\000\000?\000\000\000\000\000\000\000\000\000"
 768      3F000000 
 768      00000000 
 768      0000
 769 0272 00000000 		.ascii	"\000\000\000\000\000\000\037\300\000\000\000\000\000"
 769      00001FC0 
 769      00000000 
 769      00
 770 027f 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\007\360\000\000"
 770      00000000 
 770      0007F000 
 770      00
 771 028c 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\001"
 771      00000000 
 771      00000000 
 771      01
ARM GAS  /tmp/ccgAGEtU.s 			page 30


 772 0299 F8000000 		.ascii	"\370\000\000\000\000\000\000\000\000\000\000\000\000"
 772      00000000 
 772      00000000 
 772      00
 773 02a6 0000007E 		.ascii	"\000\000\000~\000\000\000\000\000\000\000\000\000\000"
 773      00000000 
 773      00000000 
 773      0000
 774 02b4 00000000 		.ascii	"\000\000\000\000\000?\200\000\000\000\000\000\000\000"
 774      003F8000 
 774      00000000 
 774      0000
 775 02c2 00000000 		.ascii	"\000\000\000\000\000\000\000\017\340\000\000\000\000"
 775      0000000F 
 775      E0000000 
 775      00
 776 02cf 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\003\360\000"
 776      00000000 
 776      000003F0 
 776      00
 777 02dc 80000000 		.ascii	"\200\000\000\000\000\000\000\000\000\000\000\000\000"
 777      00000000 
 777      00000000 
 777      00
 778 02e9 01FC0180 		.ascii	"\001\374\001\200\000\000\000\000\000\000\000\000\000"
 778      00000000 
 778      00000000 
 778      00
 779 02f6 00000000 		.ascii	"\000\000\000\000\177\001\300\000\000\000\000\000\000"
 779      7F01C000 
 779      00000000 
 779      00
 780 0303 00000000 		.ascii	"\000\000\000\000\000\000\000\037\201\340\000\000\000"
 780      0000001F 
 780      81E00000 
 780      00
 781 0310 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\007\341\340"
 781      00000000 
 781      000007E1 
 781      E0
 782 031d 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 782      00000000 
 782      00000000 
 782      00
 783 032a 03F9E000 		.ascii	"\003\371\340\000\000\000\000\000\000\000\000\000\000"
 783      00000000 
 783      00000000 
 783      00
 784 0337 00000000 		.ascii	"\000\000\000\000\377\340\000\000\000\000\000\000\000"
 784      FFE00000 
 784      00000000 
 784      00
 785 0344 00000000 		.ascii	"\000\000\000\000\000\000\000?\300\000\000\000\000\000"
 785      0000003F 
 785      C0000000 
 785      0000
 786 0352 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\037\300\000\000"
ARM GAS  /tmp/ccgAGEtU.s 			page 31


 786      00000000 
 786      001FC000 
 786      00
 787 035f 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\007"
 787      00000000 
 787      00000000 
 787      07
 788 036c C0000000 		.ascii	"\300\000\000\000\000\000\000\000\000\000\000\000\000"
 788      00000000 
 788      00000000 
 788      00
 789 0379 000007C0 		.ascii	"\000\000\007\300\000\000\000\000\000\000\000\000\000"
 789      00000000 
 789      00000000 
 789      00
 790 0386 00000000 		.ascii	"\000\000\000\000\000\007\300\000\000\000\000\000\000"
 790      0007C000 
 790      00000000 
 790      00
 791 0393 00000000 		.ascii	"\000\000\000\000\000\000\000\000\003\200\000\000\000"
 791      00000000 
 791      03800000 
 791      00
 792 03a0 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\001\200"
 792      00000000 
 792      00000001 
 792      80
 793 03ad 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 793      00000000 
 793      00000000 
 793      00
 794 03ba 00018000 		.ascii	"\000\001\200\000\000\000\000\000\000\000\000\000\000"
 794      00000000 
 794      00000000 
 794      00
 795 03c7 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 795      00000000 
 795      00000000 
 795      00
 796 03d4 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 796      00000000 
 796      00000000 
 796      00
 797 03e1 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 797      00000000 
 797      00000000 
 797      00
 798 03ee 00000000 		.ascii	"\000\000\000\000\000\000\000\000\000\000\000\000\000"
 798      00000000 
 798      00000000 
 798      00
 799 03fb 00000000 		.ascii	"\000\000\000\000\000"
 799      00
 800              		.text
 801              	.Letext0:
 802              		.file 3 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 803              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
ARM GAS  /tmp/ccgAGEtU.s 			page 32


 804              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 805              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 806              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 807              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 808              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_i2c.h"
 809              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 810              		.file 11 "Core/Inc/ssd1306.h"
 811              		.file 12 "Core/Inc/bitmap.h"
 812              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 813              		.file 14 "/usr/include/newlib/stdio.h"
 814              		.file 15 "/usr/include/newlib/string.h"
 815              		.file 16 "<built-in>"
ARM GAS  /tmp/ccgAGEtU.s 			page 33


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccgAGEtU.s:16     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccgAGEtU.s:23     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccgAGEtU.s:89     .text.MX_GPIO_Init:0000000000000040 $d
     /tmp/ccgAGEtU.s:94     .text.Error_Handler:0000000000000000 $t
     /tmp/ccgAGEtU.s:101    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccgAGEtU.s:133    .text.MX_I2C1_Init:0000000000000000 $t
     /tmp/ccgAGEtU.s:139    .text.MX_I2C1_Init:0000000000000000 MX_I2C1_Init
     /tmp/ccgAGEtU.s:197    .text.MX_I2C1_Init:000000000000002c $d
     /tmp/ccgAGEtU.s:204    .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/ccgAGEtU.s:210    .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/ccgAGEtU.s:265    .text.MX_USART1_UART_Init:000000000000002c $d
     /tmp/ccgAGEtU.s:271    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccgAGEtU.s:278    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccgAGEtU.s:383    .rodata.main.str1.4:0000000000000000 $d
     /tmp/ccgAGEtU.s:390    .text.main:0000000000000000 $t
     /tmp/ccgAGEtU.s:397    .text.main:0000000000000000 main
     /tmp/ccgAGEtU.s:545    .text.main:00000000000000c8 $d
     /tmp/ccgAGEtU.s:620    .data.EndMSG:0000000000000000 EndMSG
     /tmp/ccgAGEtU.s:632    .data.StartMSG:0000000000000000 StartMSG
     /tmp/ccgAGEtU.s:626    .data.Space:0000000000000000 Space
     /tmp/ccgAGEtU.s:572    .bss.Buffer:0000000000000000 Buffer
     /tmp/ccgAGEtU.s:593    .bss.data_memori:0000000000000000 data_memori
     /tmp/ccgAGEtU.s:586    .bss.Nilai_Data:0000000000000000 Nilai_Data
     /tmp/ccgAGEtU.s:579    .bss.Data_Read:0000000000000000 Data_Read
     /tmp/ccgAGEtU.s:614    .data.Data_Save:0000000000000000 Data_Save
     /tmp/ccgAGEtU.s:607    .bss.huart1:0000000000000000 huart1
     /tmp/ccgAGEtU.s:600    .bss.hi2c1:0000000000000000 hi2c1
     /tmp/ccgAGEtU.s:721    .rodata.mata_merem:0000000000000000 mata_merem
     /tmp/ccgAGEtU.s:638    .rodata.mata_melek:0000000000000000 mata_melek
     /tmp/ccgAGEtU.s:569    .bss.Buffer:0000000000000000 $d
     /tmp/ccgAGEtU.s:575    .bss.Data_Read:0000000000000000 $d
     /tmp/ccgAGEtU.s:582    .bss.Nilai_Data:0000000000000000 $d
     /tmp/ccgAGEtU.s:589    .bss.data_memori:0000000000000000 $d
     /tmp/ccgAGEtU.s:596    .bss.hi2c1:0000000000000000 $d
     /tmp/ccgAGEtU.s:603    .bss.huart1:0000000000000000 $d
     /tmp/ccgAGEtU.s:610    .data.Data_Save:0000000000000000 $d
     /tmp/ccgAGEtU.s:617    .data.EndMSG:0000000000000000 $d
     /tmp/ccgAGEtU.s:623    .data.Space:0000000000000000 $d
     /tmp/ccgAGEtU.s:629    .data.StartMSG:0000000000000000 $d
     /tmp/ccgAGEtU.s:635    .rodata.mata_melek:0000000000000000 $d
     /tmp/ccgAGEtU.s:718    .rodata.mata_merem:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_I2C_Init
HAL_UART_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_Delay
HAL_I2C_Mem_Write
HAL_I2C_Mem_Read
atoi
sprintf
strlen
ARM GAS  /tmp/ccgAGEtU.s 			page 34


HAL_UART_Transmit
